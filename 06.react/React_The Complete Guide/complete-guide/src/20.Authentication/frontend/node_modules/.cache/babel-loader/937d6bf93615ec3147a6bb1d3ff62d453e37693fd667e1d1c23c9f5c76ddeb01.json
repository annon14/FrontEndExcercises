{"ast":null,"code":"var _jsxFileName = \"C:\\\\FrontEndExcercises\\\\06.react\\\\React_The Complete Guide\\\\complete-guide\\\\src\\\\19.SPA Using React Router\\\\main project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport EventItem from \"../components/EventItem\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/` + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","EventItem","json","useLoaderData","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/FrontEndExcercises/06.react/React_The Complete Guide/complete-guide/src/19.SPA Using React Router/main project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport {json, useLoaderData} from \"react-router-dom\";\r\nexport default function EventDetailPage(){\r\n    const data = useLoaderData();\r\n    return (\r\n        <EventItem event={data.event} />\r\n    )\r\n}\r\nexport async function loader({request, params}){\r\n    const id = params.eventId\r\n    const response = await fetch(`http://localhost:8080/events/`+id)\r\n    if (!response.ok){\r\n        throw json({message: \"Could not fetch details for selected event.\"}, {status:500})\r\n    }else{\r\n\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAAQC,IAAI,EAAEC,aAAa,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,eAAe,SAASC,eAAeA,CAAA,EAAE;EAAAC,EAAA;EACrC,MAAMC,IAAI,GAAGL,aAAa,CAAC,CAAC;EAC5B,oBACIE,OAAA,CAACJ,SAAS;IAACQ,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAExC;AAACN,EAAA,CALuBD,eAAe;EAAA,QACtBH,aAAa;AAAA;AAAAW,EAAA,GADNR,eAAe;AAMvC,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAC3C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,GAACH,EAAE,CAAC;EAChE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAC;IACb,MAAMpB,IAAI,CAAC;MAACqB,OAAO,EAAE;IAA6C,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACtF,CAAC,MAAI;IAED,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}