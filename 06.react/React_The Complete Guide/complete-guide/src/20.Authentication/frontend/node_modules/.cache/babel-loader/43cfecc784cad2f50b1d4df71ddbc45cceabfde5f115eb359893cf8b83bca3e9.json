{"ast":null,"code":"var _jsxFileName = \"C:\\\\FrontEndExcercises\\\\06.react\\\\React_The Complete Guide\\\\complete-guide\\\\src\\\\20.Authentication\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  // cannot use useSearchParams Hook\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: \"Unsupported mode.\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('https://localhost:8080/' + mode, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 442 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not authenticate user.\"\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.tokens;\n  localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem(\"expiration\", expiration.toISOString());\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","resData","token","tokens","localStorage","setItem","expiration","Date","setHours","getHours","toISOString","$RefreshReg$"],"sources":["C:/FrontEndExcercises/06.react/React_The Complete Guide/complete-guide/src/20.Authentication/frontend/src/pages/Authentication.js"],"sourcesContent":["import {json, redirect} from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\nexport async function action({request}){\n\n  // cannot use useSearchParams Hook\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n\n  if( mode !== 'login' && mode !== 'signup'){\n    throw json({message: \"Unsupported mode.\"}, {status: 422});\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('https://localhost:8080/'+mode,\n      {\n        method: \"POST\",\n        headers:{ 'Content-Type': \"application/json\"},\n        body: JSON.stringify(authData)\n      });\n  if(response.status === 442 || response.status === 401){\n    return response\n  }\n  if (!response.ok){\n    throw json({message: \"Could not authenticate user.\"}, {status: 500});\n  }\n  const resData = await response.json();\n  const token = resData.tokens;\n\n  localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem(\"expiration\",expiration.toISOString() )\n\n  return redirect('/');\n}"],"mappings":";AAAA,SAAQA,IAAI,EAAEC,QAAQ,QAAO,kBAAkB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AACjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EAErC;EACA,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACxC,MAAMhB,IAAI,CAAC;MAACkB,OAAO,EAAE;IAAmB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC3D;EACA,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC/B,CAAC;EACD,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,GAACV,IAAI,EACvD;IACEW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAC;MAAE,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EACN,IAAGG,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAC;IACpD,OAAOM,QAAQ;EACjB;EACA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAC;IACf,MAAMhC,IAAI,CAAC;MAACkB,OAAO,EAAE;IAA8B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACtE;EACA,MAAMc,OAAO,GAAG,MAAMR,QAAQ,CAACzB,IAAI,CAAC,CAAC;EACrC,MAAMkC,KAAK,GAAGD,OAAO,CAACE,MAAM;EAE5BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;EACpC,MAAMI,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC7BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9CL,YAAY,CAACC,OAAO,CAAC,YAAY,EAACC,UAAU,CAACI,WAAW,CAAC,CAAE,CAAC;EAE5D,OAAOzC,QAAQ,CAAC,GAAG,CAAC;AACtB;AAAC,IAAAS,EAAA;AAAAiC,YAAA,CAAAjC,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}