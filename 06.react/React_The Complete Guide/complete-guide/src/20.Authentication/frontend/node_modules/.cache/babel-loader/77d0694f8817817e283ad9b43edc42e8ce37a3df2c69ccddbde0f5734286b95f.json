{"ast":null,"code":"var _jsxFileName = \"C:\\\\FrontEndExcercises\\\\06.react\\\\React_The Complete Guide\\\\complete-guide\\\\src\\\\19.SPA Using React Router\\\\main project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport EventsList from '../components/EventsList';\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nconst loader = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: \"Could not fetch events.\"\n    };\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\nexport default EventsPage;\nexport { loader };\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","EventsList","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","resData","json","$RefreshReg$"],"sources":["C:/FrontEndExcercises/06.react/React_The Complete Guide/complete-guide/src/19.SPA Using React Router/main project/frontend/src/pages/Events.js"],"sourcesContent":["import React from \"react\";\r\nimport EventsList from '../components/EventsList';\r\nimport {useLoaderData} from \"react-router-dom\";\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData()\r\n    if (data.isError)\r\n    return <EventsList events={data}/>\r\n}\r\nconst loader = async() => {\r\n    const response = await fetch('http://localhost:8080/events');\r\n    if (!response.ok) {\r\n        return { isError: true, message: \"Could not fetch events.\"}\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events\r\n    }\r\n}\r\nexport default EventsPage;\r\nexport {loader} ;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAQC,aAAa,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGL,aAAa,CAAC,CAAC;EAC5B,IAAIK,IAAI,CAACC,OAAO,EAChB,oBAAOJ,OAAA,CAACH,UAAU;IAACQ,MAAM,EAAEF;EAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACtC;AAACP,EAAA,CAJQD,UAAU;EAAA,QACFH,aAAa;AAAA;AAAAY,EAAA,GADrBT,UAAU;AAKnB,MAAMU,MAAM,GAAG,MAAAA,CAAA,KAAW;EACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,OAAO;MAAEV,OAAO,EAAE,IAAI;MAAEW,OAAO,EAAE;IAAyB,CAAC;EAC/D,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACX,MAAM;EACzB;AACJ,CAAC;AACD,eAAeJ,UAAU;AACzB,SAAQU,MAAM;AAAG,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}