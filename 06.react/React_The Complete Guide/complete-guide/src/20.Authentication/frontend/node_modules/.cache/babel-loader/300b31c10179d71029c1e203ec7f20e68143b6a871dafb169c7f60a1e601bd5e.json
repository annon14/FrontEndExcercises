{"ast":null,"code":"var _jsxFileName = \"C:\\\\FrontEndExcercises\\\\06.react\\\\React_The Complete Guide\\\\complete-guide\\\\src\\\\19.SPA Using React Router\\\\main project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    description: data.get(\"description\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\")\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n}\nexport default NewEventPage;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","description","image","date","response","fetch","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/FrontEndExcercises/06.react/React_The Complete Guide/complete-guide/src/19.SPA Using React Router/main project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from \"react\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport {json} from \"react-router-dom\";\r\n\r\nconst NewEventPage = () => {\r\n    return <EventForm method={\"post\"}/>\r\n};\r\nexport async function action({request, params}){\r\n    const data = await request.formData();\r\n    const eventData = {\r\n        title: data.get(\"title\"),\r\n        description: data.get(\"description\"),\r\n        image: data.get(\"image\"),\r\n        date: data.get(\"date\")\r\n    }\r\n    const response = await fetch('http://localhost:8080/events',\r\n        {\r\n            method: \"POST\",\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(eventData)\r\n        })\r\n    if (!response.ok){\r\n        throw json({message: \"Could not save event.\"}, {status: 500})\r\n    }\r\n}\r\nexport default NewEventPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBAAOD,OAAA,CAACH,SAAS;IAACK,MAAM,EAAE;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvC,CAAC;AAACC,EAAA,GAFIN,YAAY;AAGlB,OAAO,eAAeO,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAC3C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,WAAW,EAAEL,IAAI,CAACI,GAAG,CAAC,aAAa,CAAC;IACpCE,KAAK,EAAEN,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBG,IAAI,EAAEP,IAAI,CAACI,GAAG,CAAC,MAAM;EACzB,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EACvD;IACIlB,MAAM,EAAE,MAAM;IACdmB,OAAO,EAAC;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAClC,CAAC,CAAC;EACN,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAC;IACb,MAAM3B,IAAI,CAAC;MAAC4B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACjE;AACJ;AACA,eAAe1B,YAAY;AAAC,IAAAM,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}