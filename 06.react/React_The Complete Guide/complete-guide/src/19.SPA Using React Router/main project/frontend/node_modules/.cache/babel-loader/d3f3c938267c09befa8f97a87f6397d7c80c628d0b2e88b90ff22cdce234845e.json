{"ast":null,"code":"var _jsxFileName = \"C:\\\\FrontEndExcercises\\\\06.react\\\\React_The Complete Guide\\\\complete-guide\\\\src\\\\19.SPA Using React Router\\\\main project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport EventsList from '../components/EventsList';\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nconst loader = () => {\n  defer({\n    events: loadEvents()\n  });\n};\nexport default EventsPage;\nexport { loader };\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","EventsList","useLoaderData","json","defer","Await","jsxDEV","_jsxDEV","loadEvents","response","fetch","ok","message","status","resData","events","EventsPage","_s","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","$RefreshReg$"],"sources":["C:/FrontEndExcercises/06.react/React_The Complete Guide/complete-guide/src/19.SPA Using React Router/main project/frontend/src/pages/Events.js"],"sourcesContent":["import React from \"react\";\r\nimport EventsList from '../components/EventsList';\r\nimport {useLoaderData, json, defer, Await} from \"react-router-dom\";\r\n\r\nconst loadEvents = async() => {\r\n    const response = await fetch('http://localhost:8080/events');\r\n    if (!response.ok) {\r\n        throw json({message: \"Could not fetch events.\"}, { status: 500})\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events\r\n    }\r\n}\r\nfunction EventsPage() {\r\n    const {events} = useLoaderData();\r\n    return <Await resolve={events}></Await>\r\n}\r\nconst loader = () => {\r\n    defer({\r\n        events: loadEvents(),\r\n    })\r\n}\r\nexport default EventsPage;\r\nexport {loader} ;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAQC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAW;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMR,IAAI,CAAC;MAACS,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC;EACpE,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACN,IAAI,CAAC,CAAC;IACrC,OAAOW,OAAO,CAACC,MAAM;EACzB;AACJ,CAAC;AACD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAACF;EAAM,CAAC,GAAGb,aAAa,CAAC,CAAC;EAChC,oBAAOK,OAAA,CAACF,KAAK;IAACa,OAAO,EAAEH;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC3C;AAACL,EAAA,CAHQD,UAAU;EAAA,QACEd,aAAa;AAAA;AAAAqB,EAAA,GADzBP,UAAU;AAInB,MAAMQ,MAAM,GAAGA,CAAA,KAAM;EACjBpB,KAAK,CAAC;IACFW,MAAM,EAAEP,UAAU,CAAC;EACvB,CAAC,CAAC;AACN,CAAC;AACD,eAAeQ,UAAU;AACzB,SAAQQ,MAAM;AAAG,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}